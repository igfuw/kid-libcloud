diff -ruN '--exclude=mphys_libcloud_lgr.f90' '--exclude=kida_SC_2D_libcloud_lgr.nml' '--exclude=SC_2D_libcloud_lgr.nml' '--exclude=*~' '--exclude=*.mod' '--exclude=*.o' '--exclude=bin' '--exclude=4A_code' '--exclude=UM_source' '--exclude=.includes' '--exclude=case.used' '--exclude=output' '--exclude=gmon.out' '--exclude=*.orig*' '--exclude=*rej*' '--exclude=*.out' '--exclude=1D_libcloud_lgr.nml' kid_a_original_20180125_setup/namelists/1D_input.nml kid_a_setup/namelists/1D_input.nml
--- kid_a_original_20180125_setup/namelists/1D_input.nml	2017-11-10 14:43:55.000000000 +0100
+++ kid_a_setup/namelists/1D_input.nml	2018-01-30 14:14:37.952590705 +0100
@@ -3,6 +3,6 @@
 ! comment out this call (in namelists.nml) and use this file to input
 ! the value.
 &namelistToUse
-fileIn='namelists/1D.nml'
+fileIn='namelists/1D_libcloud_lgr.nml'
 fileOut='output/1D_out.nc'
 /
diff -ruN '--exclude=mphys_libcloud_lgr.f90' '--exclude=kida_SC_2D_libcloud_lgr.nml' '--exclude=SC_2D_libcloud_lgr.nml' '--exclude=*~' '--exclude=*.mod' '--exclude=*.o' '--exclude=bin' '--exclude=4A_code' '--exclude=UM_source' '--exclude=.includes' '--exclude=case.used' '--exclude=output' '--exclude=gmon.out' '--exclude=*.orig*' '--exclude=*rej*' '--exclude=*.out' '--exclude=1D_libcloud_lgr.nml' kid_a_original_20180125_setup/namelists/SC_2D_input.nml kid_a_setup/namelists/SC_2D_input.nml
--- kid_a_original_20180125_setup/namelists/SC_2D_input.nml	2017-11-10 14:43:55.000000000 +0100
+++ kid_a_setup/namelists/SC_2D_input.nml	2018-01-30 14:09:42.354387907 +0100
@@ -3,6 +3,6 @@
 ! comment out this call (in namelists.nml) and use this file to input
 ! the value.
 &namelistToUse
-fileIn='namelists/SC_2D.nml'
+fileIn='namelists/kida_SC_2D_libcloud_lgr.nml'
 fileOut='output/SC_2D_out.nc'
 /
diff -ruN '--exclude=mphys_libcloud_lgr.f90' '--exclude=kida_SC_2D_libcloud_lgr.nml' '--exclude=SC_2D_libcloud_lgr.nml' '--exclude=*~' '--exclude=*.mod' '--exclude=*.o' '--exclude=bin' '--exclude=4A_code' '--exclude=UM_source' '--exclude=.includes' '--exclude=case.used' '--exclude=output' '--exclude=gmon.out' '--exclude=*.orig*' '--exclude=*rej*' '--exclude=*.out' '--exclude=1D_libcloud_lgr.nml' kid_a_original_20180125_setup/namelists/WMO_CASE1_input.nml kid_a_setup/namelists/WMO_CASE1_input.nml
--- kid_a_original_20180125_setup/namelists/WMO_CASE1_input.nml	2017-11-10 14:43:55.000000000 +0100
+++ kid_a_setup/namelists/WMO_CASE1_input.nml	2018-01-30 14:09:42.361387911 +0100
@@ -3,6 +3,6 @@
 ! comment out this call (in namelists.nml) and use this file to input
 ! the value.
 &namelistToUse
-fileIn='namelists/WMO_CASE1.nml'
+fileIn='namelists/kida_SC_2D_libcloud_lgr.nml'
 fileOut='output/WMO_CASE1_out.nc'
 /
diff -ruN '--exclude=mphys_libcloud_lgr.f90' '--exclude=kida_SC_2D_libcloud_lgr.nml' '--exclude=SC_2D_libcloud_lgr.nml' '--exclude=*~' '--exclude=*.mod' '--exclude=*.o' '--exclude=bin' '--exclude=4A_code' '--exclude=UM_source' '--exclude=.includes' '--exclude=case.used' '--exclude=output' '--exclude=gmon.out' '--exclude=*.orig*' '--exclude=*rej*' '--exclude=*.out' '--exclude=1D_libcloud_lgr.nml' kid_a_original_20180125_setup/out kid_a_setup/out
--- kid_a_original_20180125_setup/out	1970-01-01 01:00:00.000000000 +0100
+++ kid_a_setup/out	2018-01-30 15:02:35.485484723 +0100
@@ -0,0 +1,14 @@
+Trying with serial backend...  OK!
+diagnozing!
+diagnozing!
+diagnozing!
+diagnozing!
+ Querying command line
+ Unable to determine input file from command line, so querying namelists/1D_input.nml instead...
+&NAMELISTTOUSE
+ FILEIN="namelists/1D_libcloud_lgr.nml                                                                                                                                                                           ",
+ FILEOUT="output/1D_out.nc                                                                                                                                                                                        ",
+ /
+ Using namelist: namelists/1D_libcloud_lgr.nml
+ Writing data to: output/1D_out.nc
+ Writing data @ i_dgtime=           1
diff -ruN '--exclude=mphys_libcloud_lgr.f90' '--exclude=kida_SC_2D_libcloud_lgr.nml' '--exclude=SC_2D_libcloud_lgr.nml' '--exclude=*~' '--exclude=*.mod' '--exclude=*.o' '--exclude=bin' '--exclude=4A_code' '--exclude=UM_source' '--exclude=.includes' '--exclude=case.used' '--exclude=output' '--exclude=gmon.out' '--exclude=*.orig*' '--exclude=*rej*' '--exclude=*.out' '--exclude=1D_libcloud_lgr.nml' kid_a_original_20180125_setup/src/compiler_options.inc kid_a_setup/src/compiler_options.inc
--- kid_a_original_20180125_setup/src/compiler_options.inc	2017-11-10 14:43:55.000000000 +0100
+++ kid_a_setup/src/compiler_options.inc	2018-01-30 14:09:42.370387918 +0100
@@ -56,7 +56,7 @@
 LNCDF=-L$(NCPATH)/lib -lnetcdff -lnetcdf
 LDFLAGS=$(INCDF) $(LNCDF)
 
-EXECUTABLE=$(MODEL)_$(CASE).exe
+SHARED_LIB=$(MODEL)_$(CASE).so
 
 F2PY=/usr/local/cdat/bin/f2py 
 F2PY_OPTS=--fcompiler-exec=$(COMPILER) $(LDFLAGS) 
diff -ruN '--exclude=mphys_libcloud_lgr.f90' '--exclude=kida_SC_2D_libcloud_lgr.nml' '--exclude=SC_2D_libcloud_lgr.nml' '--exclude=*~' '--exclude=*.mod' '--exclude=*.o' '--exclude=bin' '--exclude=4A_code' '--exclude=UM_source' '--exclude=.includes' '--exclude=case.used' '--exclude=output' '--exclude=gmon.out' '--exclude=*.orig*' '--exclude=*rej*' '--exclude=*.out' '--exclude=1D_libcloud_lgr.nml' kid_a_original_20180125_setup/src/diagnostics.f90 kid_a_setup/src/diagnostics.f90
--- kid_a_original_20180125_setup/src/diagnostics.f90	2017-11-10 14:43:55.000000000 +0100
+++ kid_a_setup/src/diagnostics.f90	2018-01-30 17:12:08.116002456 +0100
@@ -21,6 +21,8 @@
 
   Use namelists, only: KiD_outdir, KiD_outfile, fileNameOut
 
+  use iso_c_binding, only: c_int, c_float, c_char
+
   Implicit none
 
   type, public :: dgID
@@ -468,6 +470,10 @@
          write (unit=6,fmt='(T3, i3, a)') int(100*i_dgtime&
          &/float(maxn_dgtimes)), '% completed...'
 
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+call write_diagnostics                                    !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+
   end subroutine save_diagnostics_1d
 
   subroutine save_diagnostics_2d
@@ -838,13 +844,15 @@
     deallocate(field_bin_r)
 
     n_dgtimes=i_dgtime
-
     ! Write out progress indicator in 2% chunks.
     if ( mod( int(100*i_dgtime/float(maxn_dgtimes)), 2) < &
          mod( int(100*(i_dgtime-1)/float(maxn_dgtimes)), 2) ) &
          write (unit=6,fmt='(T3, i3, a)') int(100*i_dgtime&
          &/float(maxn_dgtimes)), '% completed...'
 
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+call write_diagnostics                                    !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
   end subroutine save_diagnostics_2d
 
   subroutine allocate_dgs_1DTS(dgStore)
@@ -858,13 +866,13 @@
     if (nx == 1) then 
        
        maxn_dgtimes=max(maxn_dgtimes, int(n_dgtimes*dt/dg_dt)+1)
-       allocate(dgStore%data(nz, maxn_dgtimes))
+       allocate(dgStore%data(nz, 2))                      !!!!
        dgStore%data=unset_real
        
     else
 
        maxn_dgtimes=max(maxn_dgtimes, int(n_dgtimes*dt/dg_dt)+1)
-       allocate(dgStore%data(1:nx, maxn_dgtimes))
+       allocate(dgStore%data(1:nx, 2))                    !!!!
        dgStore%data=unset_real      
 
     endif
@@ -880,7 +888,7 @@
     n_dgtimes = n_times - n_offset 
     
     maxn_dgtimes=max(maxn_dgtimes, int(n_dgtimes*dt/dg_dt)+1) 
-    allocate(dgStore%data(nz, 1:nx, maxn_dgtimes))
+    allocate(dgStore%data(nz, 1:nx, 2))                   !!!!
     dgStore%data=unset_real
 
   end subroutine allocate_dgs_2DTS
@@ -894,7 +902,7 @@
     n_dgtimes = n_times - n_offset   
 
     maxn_dgtimes=max(maxn_dgtimes, int(n_dgtimes*dt/dg_dt)+1)
-    allocate(dgStore%data(nz, max_nbins, maxn_dgtimes))    
+    allocate(dgStore%data(nz, max_nbins, 2))              !!!!
     dgStore%data=unset_real    
 
   end subroutine allocate_dgs_bindgs 
@@ -908,7 +916,7 @@
     n_dgtimes = n_times - n_offset   
 
     maxn_dgtimes=max(maxn_dgtimes, int(n_dgtimes*dt/dg_dt)+1)
-    allocate(dgStore%data(nz, nx, max_nbins, maxn_dgtimes))    
+    allocate(dgStore%data(nz, nx, max_nbins, 2))          !!!!
     dgStore%data=unset_real    
 
   end subroutine allocate_dgs_bindgs_2d  
@@ -922,7 +930,7 @@
     n_dgtimes = n_times - n_offset 
 
     maxn_dgtimes=max(maxn_dgtimes, int(n_dgtimes*dt/dg_dt)+1)
-    allocate(dgStore%data(maxn_dgtimes))
+    allocate(dgStore%data(2))                             !!!!
     dgStore%data=unset_real
 
   end subroutine allocate_dgs_ScalarTS
@@ -972,7 +980,7 @@
      
     real(sp), intent(in) :: field(:)
     character(*), intent(in) :: name
-    integer, intent(in) :: itime
+    integer, value :: itime                               !!!!
     character(*), intent(in), optional :: units, dim, longname
     
     !local variables for column diagnostics
@@ -1019,6 +1027,9 @@
        dg(ivar)%longname=trim(clongname)
     end if
 
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+if (itime .gt. 1) itime = 2                               !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
     dg(ivar)%data(:,itime)=field(:)
        
   end subroutine save_dg_1d_sp
@@ -1029,7 +1040,7 @@
     integer, intent(in) :: ks, ke  ! start and end of range
     real(sp), intent(in) :: field(:)
     character(*), intent(in) :: name
-    integer, intent(in) :: itime
+    integer, value :: itime                               !!!!
     character(*), intent(in), optional :: units, dim, longname
     
     !local variables
@@ -1074,6 +1085,9 @@
        dg(ivar)%dim=trim(cdim)
        dg(ivar)%longname=trim(clongname)
     end if
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+if (itime .gt. 1) itime = 2                               !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
     dg(ivar)%data(ks:ke,itime)=field(ks:ke)
 
   end subroutine save_dg_1d_range_sp
@@ -1084,7 +1098,7 @@
     integer, intent(in) :: k ! index of value to input
     real(sp), intent(in) :: value
     character(*), intent(in) :: name
-    integer, intent(in) :: itime
+    integer, value :: itime                               !!!!
     character(*), intent(in), optional :: units, dim, longname
     
     !local variables
@@ -1128,16 +1142,34 @@
        dg(ivar)%dim=trim(cdim)
        dg(ivar)%longname=trim(clongname)
     end if
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+if (itime .gt. 1) itime = 2                               !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
     dg(ivar)%data(k,itime)=value
 
   end subroutine save_dg_1d_point_sp
 
+
+  subroutine save_dg_2d_sp_c( &
+    field, nx, nz,            & 
+    name, namelen,            &
+    units, unitslen,          &
+    itime                     &
+  )
+    integer(c_int), intent(in), value :: nx, nz, itime, namelen, unitslen
+    real(c_float), intent(in) :: field(nz, nx)
+    character(namelen) :: name
+    character(unitslen) :: units
+    
+    call save_dg_2d_sp(field, name, itime, units, "z,x")
+  end subroutine
+
   subroutine save_dg_2d_sp(field, name, itime, units, &
        dim, longname)
 
     real(sp), intent(in) :: field(:,:)
     character(*), intent(in) :: name
-    integer, intent(in) :: itime
+    integer, value :: itime                               !!!!
     character(*), intent(in), optional :: units, dim, longname
     
     !local variables
@@ -1146,6 +1178,7 @@
     character(max_char_len):: cunits, cdim, clongname
     integer :: ivar
 
+
     if (.not. l_dgstep) return
 
     ! We're assuming diagnostics are instant for now
@@ -1182,6 +1215,9 @@
        dg(ivar)%longname=trim(clongname)
     end if
 
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+if (itime .gt. 1) itime = 2                               !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
     dg(ivar)%data(:,:,itime)=field(:,:)
     
   end subroutine save_dg_2d_sp
@@ -1192,7 +1228,7 @@
     integer, intent(in) :: k ,l! indices of value to input
     real(sp), intent(in) :: value
     character(*), intent(in) :: name
-    integer, intent(in) :: itime
+    integer, value :: itime                               !!!!
     character(*), intent(in), optional :: units, dim, longname
     
     !local variables
@@ -1236,6 +1272,9 @@
        dg(ivar)%dim=trim(cdim)
        dg(ivar)%longname=trim(clongname)
     end if
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+if (itime .gt. 1) itime = 2                               !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
     dg(ivar)%data(k,l,itime)=value
     
   end subroutine save_dg_2d_point_sp
@@ -1244,7 +1283,7 @@
 
     real(sp), intent(in) :: value
     character(*), intent(in) :: name
-    integer, intent(in) :: itime
+    integer, value :: itime                               !!!!
     character(*), intent(in), optional :: units, dim, longname
     
     !local variables
@@ -1285,6 +1324,9 @@
        dg(ivar)%dim=trim(cdim)
        dg(ivar)%longname=trim(clongname)
     end if
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+if (itime .gt. 1) itime = 2                               !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
     dg(ivar)%data(itime)=value
 
   end subroutine save_dg_scalar_sp
@@ -1293,7 +1335,7 @@
 
     real(dp), intent(in) :: field(:)
     character(*), intent(in) :: name
-    integer, intent(in) :: itime
+    integer, value :: itime                               !!!!
     character(*), intent(in), optional :: units, dim, longname
     
     !local variables
@@ -1338,6 +1380,9 @@
        dg(ivar)%dim=trim(cdim)
        dg(ivar)%longname=trim(clongname)
     end if
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+if (itime .gt. 1) itime = 2                               !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
     dg(ivar)%data(:,itime)=field(:)
 
   end subroutine save_dg_1d_dp
@@ -1348,7 +1393,7 @@
     integer, intent(in) :: ks, ke  ! start and end of range
     real(dp), intent(in) :: field(:)
     character(*), intent(in) :: name
-    integer, intent(in) :: itime
+    integer, value :: itime                               !!!!
     character(*), intent(in), optional :: units, dim, longname
     
     !local variables
@@ -1393,6 +1438,9 @@
        dg(ivar)%dim=trim(cdim)
        dg(ivar)%longname=trim(clongname)
     end if
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+if (itime .gt. 1) itime = 2                               !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
     dg(ivar)%data(ks:ke,itime)=field(ks:ke)
 
   end subroutine save_dg_1d_range_dp
@@ -1403,7 +1451,7 @@
     integer, intent(in) :: k ! index of value to input
     real(dp), intent(in) :: value
     character(*), intent(in) :: name
-    integer, intent(in) :: itime
+    integer, value :: itime                               !!!!
     character(*), intent(in), optional :: units, dim, longname
     
     !local variables
@@ -1447,6 +1495,9 @@
        dg(ivar)%dim=trim(cdim)
        dg(ivar)%longname=trim(clongname)
     end if
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+if (itime .gt. 1) itime = 2                               !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
     dg(ivar)%data(k,itime)=value
 
   end subroutine save_dg_1d_point_dp
@@ -1456,7 +1507,7 @@
 
     real(dp), intent(in) :: field(:,:)
     character(*), intent(in) :: name
-    integer, intent(in) :: itime
+    integer, value :: itime                               !!!!
     character(*), intent(in), optional :: units, dim, longname
     
     !local variables
@@ -1500,6 +1551,9 @@
        dg(ivar)%dim=trim(cdim)
        dg(ivar)%longname=trim(clongname)
     end if
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+if (itime .gt. 1) itime = 2                               !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
     dg(ivar)%data(:,:,itime)=field(:,:)
     
   end subroutine save_dg_2d_dp
@@ -1510,7 +1564,7 @@
     integer, intent(in) :: k ,l! indices of value to input
     real(dp), intent(in) :: value
     character(*), intent(in) :: name
-    integer, intent(in) :: itime
+    integer, value :: itime                               !!!!
     character(*), intent(in), optional :: units, dim, longname
     
     !local variables
@@ -1554,6 +1608,9 @@
        dg(ivar)%dim=trim(cdim)
        dg(ivar)%longname=trim(clongname)
     end if
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+if (itime .gt. 1) itime = 2                               !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
     dg(ivar)%data(k,l,itime)=value
     
   end subroutine save_dg_2d_point_dp
@@ -1563,7 +1620,7 @@
 
     real(dp), intent(in) :: value
     character(*), intent(in) :: name
-    integer, intent(in) :: itime
+    integer, value :: itime                               !!!!
     character(*), intent(in), optional :: units, dim, longname
     
     !local variables
@@ -1604,6 +1661,9 @@
        dg(ivar)%dim=trim(cdim)
        dg(ivar)%longname=trim(clongname)
     end if
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+if (itime .gt. 1) itime = 2                               !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
     dg(ivar)%data(itime)=value
 
   end subroutine save_dg_scalar_dp
@@ -1614,7 +1674,7 @@
     real(sp), intent(in) :: field(:,:)
     character(*), intent(in) :: name
     !character(*), intent(in) :: bin  
-    integer, intent(in) :: itime
+    integer, value :: itime                               !!!!
     character(*), intent(in), optional :: units, dim, longname
 
     !local variables
@@ -1659,6 +1719,9 @@
        dg(ivar)%longname=trim(clongname)
     end if
     
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+if (itime .gt. 1) itime = 2                               !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
     dg(ivar)%data(:,:,itime)=field(:,:)
     
   end subroutine save_dg_bin_sp
@@ -1669,7 +1732,7 @@
     real(dp), intent(in) :: field(:,:)
     character(*), intent(in) :: name
     !character(*), intent(in) :: bin  
-    integer, intent(in) :: itime
+    integer, value :: itime                               !!!!
     character(*), intent(in), optional :: units, dim, longname
 
     !local variables
@@ -1714,16 +1777,33 @@
        dg(ivar)%longname=trim(clongname)
     end if
     
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+if (itime .gt. 1) itime = 2                               !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
     dg(ivar)%data(:,:,itime)=field(:,:)
     
   end subroutine save_dg_bin_dp
 
+  subroutine save_dg_2d_bin_sp_c( &
+    field, nb, nx, nz,            & 
+    name, namelen,                &
+    units, unitslen,              &
+    itime                         &
+  )
+    integer(c_int), intent(in), value :: nb, nx, nz, itime, namelen, unitslen
+    real(c_float), intent(in) :: field(nz, nx, nb)
+    character(namelen) :: name
+    character(unitslen) :: units
+    
+    call save_dg_2d_bin_sp(field, name, itime, units, "z,x,b")
+  end subroutine
+
 subroutine save_dg_2d_bin_sp(field, name, itime, units, &
      dim, longname)
     
     real(sp), intent(in) :: field(:,:,:)
     character(*), intent(in) :: name
-    integer, intent(in) :: itime
+    integer, value :: itime                               !!!!
     character(*), intent(in), optional :: units, dim, longname
 
     !local variables
@@ -1768,6 +1848,9 @@
        dg(ivar)%longname=trim(clongname)
     end if
     
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+if (itime .gt. 1) itime = 2                               !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
     dg(ivar)%data(:,:,:,itime)=field(:,:,:)
     
   end subroutine save_dg_2d_bin_sp
@@ -1777,7 +1860,7 @@
     
     real(dp), intent(in) :: field(:,:,:)
     character(*), intent(in) :: name
-    integer, intent(in) :: itime
+    integer, value :: itime                               !!!!
     character(*), intent(in), optional :: units, dim, longname
 
     !local variables
@@ -1822,10 +1905,26 @@
        dg(ivar)%longname=trim(clongname)
     end if
     
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+if (itime .gt. 1) itime = 2                               !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
     dg(ivar)%data(:,:,:,itime)=field(:,:,:)
     
   end subroutine save_dg_2d_bin_dp
 
+  subroutine save_binData_sp_c(&
+    field, nb,                 & 
+    name, namelen,             &
+    units, unitslen            &
+  )
+    integer(c_int), intent(in), value :: nb, namelen, unitslen
+    real(c_float), intent(in) :: field(nb)
+    character(namelen) :: name
+    character(unitslen) :: units
+    
+    call save_binData_sp(field, name, units)
+  end subroutine
+
   subroutine save_binData_sp(field, name, units, &
        longname)
     ! Save the bin data (e.g. sizes or masses)
@@ -1912,7 +2011,7 @@
     
   end subroutine save_binData_dp
 
-  subroutine write_diagnostics
+  recursive subroutine write_diagnostics                  !!!!
 
     Use netcdf
     Use switches, only : icase
@@ -1924,15 +2023,33 @@
     integer :: ivar, itmp=1, offset=3, n_dgs, k, iq, tim, ibin
     character(4) :: char4
     
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+integer, save :: ncid                                     !!!!
+integer :: vid, itime                                     !!!!
+logical, save :: init = .false.                           !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+
     ! netcdf variables
-    integer :: status, ncid, zid, xid, timeid, binsid
+    integer :: status, zid, xid, timeid, binsid           !!!!
     integer :: tzdim(2), txdim(2), tzldim(3), tzxdim(3), tzxbindim(4)  & 
         ,dim, dim2d(2), dim3d(3), dim4d(4) 
     integer, allocatable :: varid(:)
-    real, allocatable :: field3d(:,:,:)
-    real, allocatable :: field4d(:,:,:,:)
-    
-    write(6,*) 'Integration complete.'
+    real, allocatable :: field3d(:,:)                     !!!!
+    real, allocatable :: field4d(:,:,:)                   !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+if (i_dgtime .eq. 1) return                               !!!! 
+                                                          !!!!
+if ((i_dgtime .eq. 2) .and. (init .eqv. .false.)) then    !!!!
+  init = .true.                                           !!!!
+  call write_diagnostics                                  !!!!
+endif                                                     !!!!
+                                                          !!!!
+itime = 2                                                 !!!!
+                                                          !!!!
+if (init) then                                            !!!!
+    itime = 1                                             !!!!
+    i_dgtime = 1                                          !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 
     if (fileNameOut=='')then
       write(char4,'(I4.4)')icase
@@ -1990,7 +2107,7 @@
     status=nf90_put_att(ncid, nf90_global, 'references', references)
     status=nf90_put_att(ncid, nf90_global, 'comments', comments)
     
-    status=nf90_def_dim(ncid, 'time', int(n_dgtimes, kind=incdfp), timeid)
+    status=nf90_def_dim(ncid, 'time', NF90_UNLIMITED, timeid)  !!!!
     call check_ncstatus(status)
     status=nf90_def_dim(ncid, 'z', int(nz, kind=incdfp), zid)
     call check_ncstatus(status)
@@ -1999,11 +2116,11 @@
     status=nf90_def_dim(ncid, 'x', int(nx, kind=incdfp), xid)
     call check_ncstatus(status)
 
-    tzdim=(/ timeid, zid /)
-    txdim=(/ timeid, xid /)
-    tzldim=(/ timeid, binsid, zid /)
-    tzxdim=(/ timeid, xid, zid /)
-    tzxbindim=(/ timeid, binsid, xid, zid /)
+    tzdim=(/ zid, timeid /)                               !!!!
+    txdim=(/ xid, timeid /)                               !!!!
+    tzldim=(/ binsid, zid, timeid /)                      !!!!
+    tzxdim=(/ xid, zid, timeid /)                         !!!!
+    tzxbindim=(/ binsid, xid, zid, timeid /)              !!!!
 
     ! Do the dim variables
     n_dgs=2
@@ -2063,7 +2180,13 @@
     deallocate(varid)
     
     ! Do scalars (including time)
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+endif                                                     !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
     n_dgs=ID_Scalars%nids
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+if (init) then                                            !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
     allocate(varid(n_dgs))
     status=nf90_redef(ncid)
     dim=timeid
@@ -2084,25 +2207,47 @@
     
     status=nf90_enddef(ncid)
 
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+endif                                                     !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
     do ivar=1,n_dgs
-       status=nf90_put_var(ncid, varid(ivar), &
-            scalars(ivar)%data(1:n_dgtimes))
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+       name=scalars(ivar)%name                            !!!!
+       call sanitize(name)                                !!!!
+       status=nf90_inq_varid(ncid, name, vid)             !!!!
+       call check_ncstatus(status)                        !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+       status=nf90_put_var(ncid, vid, &                   !!!!
+            scalars(ivar)%data(itime), start=(/i_dgtime/))!!!!
        call check_ncstatus(status)
     end do
 
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+if (init) then                                            !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 
     deallocate(varid)
 
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+endif                                                     !!!!
+                                                          !!!!
+write(6,*) 'Writing data @ i_dgtime=', i_dgtime           !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
     if (nx == 1) then
-
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+!!!!                   nx == 1 case not finished!         !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+       print *, 'diag nx==1'
        ! Do the instantaneous diags (1D)
        n_dgs=ID_instant_column%nids
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+if (init) then                                            !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        allocate(varid(n_dgs))
        status=nf90_redef(ncid)
        dim2d=tzdim
 
        do ivar=1,n_dgs
-
           status=nf90_def_var(ncid, instant_column(ivar)%name &
                , nf90_float, dim2d, varid(ivar))
           call check_ncstatus(status)
@@ -2115,17 +2260,32 @@
        end do
        
        status=nf90_enddef(ncid)
+
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+endif                                                     !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        
+       print *, 'diag nx==2'
        do ivar=1,n_dgs
-          status=nf90_put_var(ncid, varid(ivar), &
-               transpose(instant_column(ivar)%data(1:nz,1:n_dgtimes)))
+          status=nf90_put_var(ncid, vid, &
+               transpose(instant_column(ivar)%data(1:nz, 1:2)))
           call check_ncstatus(status)
        end do
 
+       print *, 'diag nx==3'
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+if (init) then                                            !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        deallocate(varid)
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+endif                                                     !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 
        ! Do the instantaneous bin diags (2D)
        n_dgs=ID_instant_bindgs%nids
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+if (init) then                                            !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        allocate(varid(n_dgs))
        status=nf90_redef(ncid)
        dim3d=tzldim
@@ -2143,18 +2303,22 @@
        end do
 
        status=nf90_enddef(ncid)
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+endif                                                     !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        
-       allocate(field3d(n_dgtimes, max_nbins, nz))
+!!!! TODO
+       allocate(field3d(max_nbins, nz))
 
        do ivar=1,n_dgs
-          do tim=1,n_dgtimes
+!!          do tim=1,n_dgtimes
              do iq=1, max_nbins
                 do k = 1,nz
-                   field3d(tim,iq,k)= instant_bindgs(ivar)%data(k,iq,tim)
+                   field3d(iq,k)= instant_bindgs(ivar)%data(k,iq,itime) !!!!
                 enddo
              enddo
-          enddo
-          status=nf90_put_var(ncid, varid(ivar), field3d)
+!!          enddo
+          status=nf90_put_var(ncid, vid, field3d)
           
           call check_ncstatus(status)
           
@@ -2162,12 +2326,22 @@
        
        deallocate(field3d)
        
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+if (init) then                                            !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        deallocate(varid)      
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+endif                                                     !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        
+    ! nx > 1
     else
        
        ! Do the instantaneous diags (2D)
        n_dgs=ID_instant_2D%nids
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+if (init) then                                            !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        allocate(varid(n_dgs))
        status=nf90_redef(ncid)
        dim3d=tzxdim
@@ -2186,18 +2360,26 @@
        
        status=nf90_enddef(ncid)
 
-       allocate(field3d(n_dgtimes, nx, nz))
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+endif                                                     !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+       allocate(field3d(nx, nz)) !!!!
        
        do ivar=1,n_dgs
-          do tim=1,n_dgtimes
+!!!!     do tim=1,n_dgtimes                               !!!!
              do j = 1, nx
                 do k = 1,nz
-                   field3d(tim,j,k)= field_mask(k,j)*instant_2D(ivar)%data(k,j,tim) &
+                   field3d(j,k)= field_mask(k,j)*instant_2D(ivar)%data(k,j,itime) &
                         +(1.-field_mask(k,j))*unset_real
                 enddo
-             enddo
+!!!!        enddo                                         !!!!
           enddo
-          status=nf90_put_var(ncid, varid(ivar), field3d)
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+          status=nf90_inq_varid(ncid, &                   !!!!
+               instant_2D(ivar)%name, vid)                !!!!
+          call check_ncstatus(status)                     !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+          status=nf90_put_var(ncid, vid, field3d, start=(/1,1,i_dgtime/)) !!!!
 
           call check_ncstatus(status)
 
@@ -2205,10 +2387,19 @@
 
        deallocate(field3d)
 
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+if (init) then                                            !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        deallocate(varid)
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+endif                                                     !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 
        ! Do the instantaneous bin micro diags (2D)
        n_dgs=ID_instant_2Dbindgs%nids
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+if (init) then                                            !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        allocate(varid(n_dgs))
        status=nf90_redef(ncid)
        dim4d=tzxbindim
@@ -2227,20 +2418,30 @@
        
        status=nf90_enddef(ncid)
 
-       allocate(field4d(n_dgtimes, max_nbins, nx, nz))
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+endif                                                     !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+       allocate(field4d(max_nbins, nx, nz))
        
        do ivar=1,n_dgs
-          do tim=1,n_dgtimes
+!!!!     do tim=1,n_dgtimes                               !!!!
              do ibin= 1,max_nbins 
                 do j = 1, nx
                    do k = 1,nz
-                      field4d(tim,ibin,j,k)= field_mask(k,j)*instant_2Dbindgs(ivar)%data(k,j,ibin,tim) &
+                      field4d(ibin,j,k)= field_mask(k,j)*instant_2Dbindgs(ivar)%data(k,j,ibin,itime) & !!!!
                            +(1.-field_mask(k,j))*unset_real 
                    enddo
                 enddo
-             enddo
+!!!!        enddo                                         !!!!
           enddo
-          status=nf90_put_var(ncid, varid(ivar), field4d)
+         
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+          status=nf90_inq_varid(ncid, &                   !!!!
+               instant_2Dbindgs(ivar)%name, vid)          !!!!
+          call check_ncstatus(status)                     !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+
+          status=nf90_put_var(ncid, vid, field4d(:,:,:), start=(/1,1,1,i_dgtime/))  !!!!
 
           call check_ncstatus(status)
 
@@ -2248,10 +2449,19 @@
 
        deallocate(field4d)
 
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+if (init) then                                            !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        deallocate(varid)
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+endif                                                     !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 
        ! Do the instantaneous diags (nx vs time)
        n_dgs=ID_instant_column%nids
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+if (init) then                                            !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        allocate(varid(n_dgs))
        status=nf90_redef(ncid)
        dim2d=txdim
@@ -2270,19 +2480,39 @@
 
        status=nf90_enddef(ncid)
 
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+endif                                                     !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+
        do ivar=1,n_dgs
-          status=nf90_put_var(ncid, varid(ivar), &
-               transpose(instant_column(ivar)%data(1:nx,1:n_dgtimes)))
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+          status=nf90_inq_varid(ncid, &                   !!!!
+               instant_column(ivar)%name, vid)            !!!!
+          call check_ncstatus(status)                     !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+          status=nf90_put_var(ncid, vid, instant_column(ivar)%data(1:nx,itime), start=(/1, i_dgtime/)) !!!!
           call check_ncstatus(status)
        end do
        
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+if (init) then                                            !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        deallocate(varid)
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+endif                                                     !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 
     endif
   
-    status=nf90_close(ncid)
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+    status = nf90_sync(ncid)                              !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+!!!! status=nf90_close(ncid)                              !!!!
     call check_ncstatus(status)
 
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+if (init) then                                            !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 
     ! We now write out the full namelist data to file
     nmlfile=outfile(1:len_trim(outfile)-3)//'.nml'
@@ -2296,8 +2526,11 @@
     write(99, switch)
     write(99, addcontrol)
     close(99)
-
-
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
+i_dgtime = 2                                              !!!!
+init = .false.                                            !!!!
+endif                                                     !!!!
+!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
   end subroutine write_diagnostics
 
   subroutine check_ncstatus(status, name)
Binary files kid_a_original_20180125_setup/src/.diagnostics.f90.swo and kid_a_setup/src/.diagnostics.f90.swo differ
diff -ruN '--exclude=mphys_libcloud_lgr.f90' '--exclude=kida_SC_2D_libcloud_lgr.nml' '--exclude=SC_2D_libcloud_lgr.nml' '--exclude=*~' '--exclude=*.mod' '--exclude=*.o' '--exclude=bin' '--exclude=4A_code' '--exclude=UM_source' '--exclude=.includes' '--exclude=case.used' '--exclude=output' '--exclude=gmon.out' '--exclude=*.orig*' '--exclude=*rej*' '--exclude=*.out' '--exclude=1D_libcloud_lgr.nml' kid_a_original_20180125_setup/src/main.f90 kid_a_setup/src/main.f90
--- kid_a_original_20180125_setup/src/main.f90	2017-11-10 14:43:55.000000000 +0100
+++ kid_a_setup/src/main.f90	2018-01-30 14:09:42.390387931 +0100
@@ -97,7 +97,8 @@
 
     end do
 
-    if (l_write_dgs) call write_diagnostics
+!!!! if (l_write_dgs) call write_diagnostics              !!!!
+!!!! included in save_diagnostics_2d                      !!!!
 
   end subroutine main_loop
 
diff -ruN '--exclude=mphys_libcloud_lgr.f90' '--exclude=kida_SC_2D_libcloud_lgr.nml' '--exclude=SC_2D_libcloud_lgr.nml' '--exclude=*~' '--exclude=*.mod' '--exclude=*.o' '--exclude=bin' '--exclude=4A_code' '--exclude=UM_source' '--exclude=.includes' '--exclude=case.used' '--exclude=output' '--exclude=gmon.out' '--exclude=*.orig*' '--exclude=*rej*' '--exclude=*.out' '--exclude=1D_libcloud_lgr.nml' kid_a_original_20180125_setup/src/makefile.inc kid_a_setup/src/makefile.inc
--- kid_a_original_20180125_setup/src/makefile.inc	2017-11-10 14:43:55.000000000 +0100
+++ kid_a_setup/src/makefile.inc	2018-01-30 14:09:42.396387936 +0100
@@ -29,7 +29,7 @@
 OBJS=$(OBJSF) $(OBJSF90)
 
 
-all: defs $(EXECUTABLE)
+all: defs $(SHARED_LIB)
 
 defs:
 	touch case.used
@@ -49,10 +49,13 @@
 	$(F90D) -c $< -o $@ $(INCDF)
 
 $(OBJSF90): $(OBJDIR)/%.o: %.f90 
-	$(F90D) -c $< -o $@ $(INCDF)
+	$(F90D) -c -fPIC $< -o $@ $(INCDF)
 
 $(OBJSF): $(OBJDIR)/%.o: %.f 
-	$(F90D)  -c $< -o $@ $(INCDF)
+	$(F90D) -c -fPIC $< -o $@ $(INCDF)
 
 $(EXECUTABLE): $(OBJS) $(OBJSF90_UM) $(OBJSF90_4A)
 	$(LD) -o $(EXECDIR)/$(EXECUTABLE) $(OBJDIR)/*.o $(OBJSF90_4A) $(OBJSF90_UM) $(LDFLAGS)
+
+$(SHARED_LIB): $(OBJS) $(OBJPTRUTIL) $(OBJSF90_UM) $(OBJSF90_4A)
+	$(LD) -shared -o $(EXECDIR)/$(SHARED_LIB) $(OBJDIR)/*.o $(OBJSF90_4A) $(OBJSF90_UM) $(LDFLAGS)
diff -ruN '--exclude=mphys_libcloud_lgr.f90' '--exclude=kida_SC_2D_libcloud_lgr.nml' '--exclude=SC_2D_libcloud_lgr.nml' '--exclude=*~' '--exclude=*.mod' '--exclude=*.o' '--exclude=bin' '--exclude=4A_code' '--exclude=UM_source' '--exclude=.includes' '--exclude=case.used' '--exclude=output' '--exclude=gmon.out' '--exclude=*.orig*' '--exclude=*rej*' '--exclude=*.out' '--exclude=1D_libcloud_lgr.nml' kid_a_original_20180125_setup/src/mphys_interface.f90 kid_a_setup/src/mphys_interface.f90
--- kid_a_original_20180125_setup/src/mphys_interface.f90	2017-11-10 14:43:55.000000000 +0100
+++ kid_a_setup/src/mphys_interface.f90	2018-01-30 14:09:42.402387940 +0100
@@ -19,6 +19,7 @@
 #if SHIPWAY_MICRO == 1
   Use mphys_4A, only: mphys_4A_interface
 #endif
+  Use mphys_libcloud_lgr, only: mphys_libcloud_lgr_interface
   Use switches
   Use column_variables, only: theta, dtheta_adv, dtheta_div
   Use pressure_update, only : exner_timestep_upd
@@ -54,6 +55,9 @@
     case(imphys_4A)         ! Shipway 4A scheme
        call mphys_4A_interface
 #endif
+    case(imphys_libcloud_lgr) ! libcloudph++: lagrangian scheme (super-droplet)
+       call mphys_libcloud_lgr_interface
+
     end select
 
   end subroutine mphys_column
diff -ruN '--exclude=mphys_libcloud_lgr.f90' '--exclude=kida_SC_2D_libcloud_lgr.nml' '--exclude=SC_2D_libcloud_lgr.nml' '--exclude=*~' '--exclude=*.mod' '--exclude=*.o' '--exclude=bin' '--exclude=4A_code' '--exclude=UM_source' '--exclude=.includes' '--exclude=case.used' '--exclude=output' '--exclude=gmon.out' '--exclude=*.orig*' '--exclude=*rej*' '--exclude=*.out' '--exclude=1D_libcloud_lgr.nml' kid_a_original_20180125_setup/src/namelists.f90 kid_a_setup/src/namelists.f90
--- kid_a_original_20180125_setup/src/namelists.f90	2017-11-10 14:43:55.000000000 +0100
+++ kid_a_setup/src/namelists.f90	2018-01-30 14:09:42.409387944 +0100
@@ -180,6 +180,9 @@
     case('4A')
        imphys=imphys_4A
        mphys_id='4A'
+    case('libcloud_lgr')
+       imphys=imphys_libcloud_lgr
+       mphys_id='libcloud_lgr'
     case default
        print*, 'Mphys scheme not recognized: ', mphys_scheme
        print*, 'Did you mean:' 
diff -ruN '--exclude=mphys_libcloud_lgr.f90' '--exclude=kida_SC_2D_libcloud_lgr.nml' '--exclude=SC_2D_libcloud_lgr.nml' '--exclude=*~' '--exclude=*.mod' '--exclude=*.o' '--exclude=bin' '--exclude=4A_code' '--exclude=UM_source' '--exclude=.includes' '--exclude=case.used' '--exclude=output' '--exclude=gmon.out' '--exclude=*.orig*' '--exclude=*rej*' '--exclude=*.out' '--exclude=1D_libcloud_lgr.nml' kid_a_original_20180125_setup/src/switches.f90 kid_a_setup/src/switches.f90
--- kid_a_original_20180125_setup/src/switches.f90	2017-11-10 14:43:55.000000000 +0100
+++ kid_a_setup/src/switches.f90	2018-01-30 14:09:42.416387949 +0100
@@ -96,7 +96,8 @@
        ,imphys_um7_3            =9  & ! UM test: Jonathan Wilkinson
        ,imphys_wsm6             =10 & ! WSM6 scheme
        ,imphys_wdm6             =11 & ! WDM6 scheme
-       ,imphys_4A               =12   ! Shipway scheme
+       ,imphys_4A               =12 & ! Shipway scheme
+       ,imphys_libcloud_lgr     =44   ! libcloudph++: lagrangian scheme (super-droplet)
       
   ! Integer switches to choose input data type and/or test case
   integer, parameter ::    & 
